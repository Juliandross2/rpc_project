/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _INTERFACECOCINEROSERVIDORPEDIDOS_H_RPCGEN
#define _INTERFACECOCINEROSERVIDORPEDIDOS_H_RPCGEN
#include <tirpc/rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX_NOMBRE 50

struct info_cocinero {
	int id;
	int estado;
};
typedef struct info_cocinero info_cocinero;

struct pedido_asignado {
	nodo_hamburguesa hamburguesa;
	int id_pedido;
};
typedef struct pedido_asignado pedido_asignado;

#define PROG_COCINEROS 0x20000002
#define VER_COCINEROS_1 1

#if defined(__STDC__) || defined(__cplusplus)
#define registrar_cocinero 1
extern  bool_t * registrar_cocinero_1(info_cocinero *, CLIENT *);
extern  bool_t * registrar_cocinero_1_svc(info_cocinero *, struct svc_req *);
#define notificar_completado 2
extern  bool_t * notificar_completado_1(int *, CLIENT *);
extern  bool_t * notificar_completado_1_svc(int *, struct svc_req *);
#define obtener_proximo_pedido 3
extern  pedido_asignado * obtener_proximo_pedido_1(int *, CLIENT *);
extern  pedido_asignado * obtener_proximo_pedido_1_svc(int *, struct svc_req *);
extern int prog_cocineros_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define registrar_cocinero 1
extern  bool_t * registrar_cocinero_1();
extern  bool_t * registrar_cocinero_1_svc();
#define notificar_completado 2
extern  bool_t * notificar_completado_1();
extern  bool_t * notificar_completado_1_svc();
#define obtener_proximo_pedido 3
extern  pedido_asignado * obtener_proximo_pedido_1();
extern  pedido_asignado * obtener_proximo_pedido_1_svc();
extern int prog_cocineros_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_info_cocinero (XDR *, info_cocinero*);
extern  bool_t xdr_pedido_asignado (XDR *, pedido_asignado*);

#else /* K&R C */
extern bool_t xdr_info_cocinero ();
extern bool_t xdr_pedido_asignado ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_INTERFACECOCINEROSERVIDORPEDIDOS_H_RPCGEN */
